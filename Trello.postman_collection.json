{
	"info": {
		"_postman_id": "dd5f1ed1-30c7-4f1c-a8ea-f95ea6d05e75",
		"name": "Trello",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create a bord",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0149c930-fc5a-4b43-8344-9f4e288f979a",
						"exec": [
							"// Use currentBoardNumber to store the board number\r",
							"var currentBoardNumber = pm.environment.get(\"currentBoardNumber\");\r",
							"\r",
							"// Check if currentBoardNumber is already defined \r",
							"if (currentBoardNumber) {\r",
							"    currentBoardNumber++; // increment\r",
							"} else {\r",
							"    currentBoardNumber = 1; // start from 1\r",
							"}\r",
							"\r",
							"\r",
							"var boardName = \"My board \" + currentBoardNumber;\r",
							"\r",
							"// Set the boardName for the request\r",
							"pm.environment.set(\"boardName\", boardName);\r",
							"\r",
							"// Set the currentBoardNumber for future requests\r",
							"pm.environment.set(\"currentBoardNumber\", currentBoardNumber);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8921d2de-54b6-4e82-aa58-ed596308fbb1",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"pm.test(\"Board should be created\", function () {",
							"    pm.expect(response.name).eql(pm.environment.get(\"boardName\"));",
							"",
							"    pm.expect(response.closed).eql(false);",
							"});",
							"",
							"pm.test(\"Board should be private\", function () {",
							"    pm.expect(response.prefs.permissionLevel).eql(\"private\");",
							"});",
							"",
							"pm.environment.set(\"boardId\", response.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.trello.com/1/boards/?name={{boardName}}&key={{trelloKey}}&token={{trelloToken}}&defaultLists=false",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "{{boardName}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "defaultLists",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create TODO list",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c7dfed0b-9182-41c2-a3ab-099e18b7ab57",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"pm.test(\"List should be created\", function () {",
							"    pm.expect(response.name).eql(pm.environment.get(\"list1Name\"));",
							"    pm.expect(response.closed).eql(false);",
							"});",
							"",
							"pm.test(\"List was created inside the properly board\", function () {",
							"    pm.expect(response.idBoard).eql(pm.environment.get(\"boardId\"));",
							"});",
							"",
							"pm.environment.set(\"todoListId\", response.id);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "031f3756-cbb5-4567-8b73-1a1d6d928b90",
						"exec": [
							"pm.environment.set(\"list1Name\", \"TODO\");",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.trello.com/1/lists?name={{list1Name}}&idBoard={{boardId}}&key={{trelloKey}}&token={{trelloToken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "{{list1Name}}"
						},
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create DONE list",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ec0bf645-5d63-459c-8423-e99d3ae0295a",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"pm.test(\"List should be created\", function () {",
							"    pm.expect(response.name).eql(pm.environment.get(\"list2Name\"));",
							"    pm.expect(response.closed).eql(false);",
							"});",
							"",
							"pm.test(\"List was created inside the properly board\", function () {",
							"    pm.expect(response.idBoard).eql(pm.environment.get(\"boardId\"));",
							"});",
							"",
							"pm.environment.set(\"doneListId\", response.id);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "80235067-ecc3-4d35-a6ad-2dfb69e1707e",
						"exec": [
							"pm.environment.set(\"list2Name\", \"DONE\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.trello.com/1/lists?name={{list2Name}}&idBoard={{boardId}}&key={{trelloKey}}&token={{trelloToken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "{{list2Name}}"
						},
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create card in TODO list",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6124b150-76d4-443f-ac4a-a345e330a727",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Card should be created\", function () {\r",
							"    pm.expect(response.name).eql(pm.environment.get(\"cardName\"));\r",
							"    pm.expect(response.closed).to.eql(false);\r",
							"    pm.expect(response.idList).to.eql(pm.environment.get(\"todoListId\"));\r",
							"    pm.expect(response.idBoard).to.eql(pm.environment.get(\"boardId\"));\r",
							"});\r",
							"pm.test(\"Card should have no votes or attachments\", function () {\r",
							"    pm.expect(response.badges.votes).to.eql(0);\r",
							"    pm.expect(response.badges.attachmentsByType.trello.card).to.eql(0);\r",
							"});\r",
							"pm.environment.set(\"cardId\", response.id);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "aeaa70dd-52da-49c7-ac16-e9f1d2d1b6e3",
						"exec": [
							"pm.environment.set(\"cardName\", \"Learn Postman\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.trello.com/1/cards?name={{cardName}}&idList={{todoListId}}&key={{trelloKey}}&token={{trelloToken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "name",
							"value": "{{cardName}}"
						},
						{
							"key": "idList",
							"value": "{{todoListId}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Move card in DONE list",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "792e0762-d8a6-4533-af1c-911c55ed9493",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Card should have new list\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.idList).to.eql(pm.environment.get(\"doneListId\"));",
							"});",
							"pm.test(\"Card should preserve properties\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"Learn Postman\");",
							"    pm.expect(jsonData.closed).to.eql(false);",
							"    pm.expect(jsonData.idBoard).to.eql(pm.environment.get(\"boardId\"));",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.trello.com/1/cards/:id?idList={{doneListId}}&key={{trelloKey}}&token={{trelloToken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards",
						":id"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{doneListId}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{cardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a bord",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "44a1b7f3-c4c2-4681-b1d0-ff69768219c1",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.trello.com/1/boards/:id?key={{trelloKey}}&token={{trelloToken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{boardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6bb9fe0d-06e8-45be-a864-b299fc20dc55",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"",
							"pm.test(\"Body is correct\", function () {",
							"    pm.response.to.have.body(\"The requested resource was not found.\");",
							"});",
							"",
							"// Clear enviroment variables",
							"pm.environment.unset(\"boardName\");",
							"pm.environment.unset(\"boardId\");",
							"pm.environment.unset(\"todoListId\");",
							"pm.environment.unset(\"doneListId\");",
							"pm.environment.unset(\"cardId\");",
							"pm.environment.unset(\"list1Name\");",
							"pm.environment.unset(\"list2Name\");",
							"pm.environment.unset(\"cardName\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.trello.com/1/boards/:id?key={{trelloKey}}&token={{trelloToken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{boardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all boards",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7488e80b-6cd8-4d9d-b1a4-7989fce1b263",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.trello.com/1/members/marina18713026/boards?key={{trelloKey}}&token={{trelloToken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"members",
						"marina18713026",
						"boards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "Get all boards",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.trello.com/1/members/marina18713026/boards?key={{trelloKey}}&token={{trelloToken}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"members",
								"marina18713026",
								"boards"
							],
							"query": [
								{
									"key": "key",
									"value": "{{trelloKey}}"
								},
								{
									"key": "token",
									"value": "{{trelloToken}}"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-DNS-Prefetch-Control",
							"value": "off"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=15552000"
						},
						{
							"key": "X-Download-Options",
							"value": "noopen"
						},
						{
							"key": "Surrogate-Control",
							"value": "no-store"
						},
						{
							"key": "Cache-Control",
							"value": "max-age=0, must-revalidate, no-cache, no-store"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "Thu, 01 Jan 1970 00:00:00"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "strict-origin-when-cross-origin"
						},
						{
							"key": "X-XSS-Protection",
							"value": "1; mode=block"
						},
						{
							"key": "X-Trello-Version",
							"value": "1.1584.0"
						},
						{
							"key": "X-Trello-Environment",
							"value": "Production"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "GET, PUT, POST, DELETE"
						},
						{
							"key": "Access-Control-Allow-Headers",
							"value": "Authorization, Accept, Content-Type"
						},
						{
							"key": "X-RATE-LIMIT-API-KEY-INTERVAL-MS",
							"value": "10000"
						},
						{
							"key": "X-RATE-LIMIT-API-KEY-MAX",
							"value": "300"
						},
						{
							"key": "X-RATE-LIMIT-API-KEY-REMAINING",
							"value": "298"
						},
						{
							"key": "X-RATE-LIMIT-API-TOKEN-INTERVAL-MS",
							"value": "10000"
						},
						{
							"key": "X-RATE-LIMIT-API-TOKEN-MAX",
							"value": "100"
						},
						{
							"key": "X-RATE-LIMIT-API-TOKEN-REMAINING",
							"value": "98"
						},
						{
							"key": "X-RATE-LIMIT-MEMBER-INTERVAL-MS",
							"value": "10000"
						},
						{
							"key": "X-RATE-LIMIT-MEMBER-MAX",
							"value": "200"
						},
						{
							"key": "X-RATE-LIMIT-MEMBER-REMAINING",
							"value": "199"
						},
						{
							"key": "X-Server-Time",
							"value": "1553185336419"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "2"
						},
						{
							"key": "ETag",
							"value": "W/\"2-l9Fw4VUO7kr8CvBlt4zaMCqXZ0w\""
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Thu, 21 Mar 2019 16:22:16 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "[]"
				}
			]
		}
	]
}